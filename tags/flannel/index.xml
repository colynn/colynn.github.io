<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Flannel on Colynn.Liu</title><link>https://colynn.github.io/tags/flannel/</link><description>Recent content in Flannel on Colynn.Liu</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Fri, 10 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://colynn.github.io/tags/flannel/index.xml" rel="self" type="application/rss+xml"/><item><title>kubernetes-网络组件-flannel-calico</title><link>https://colynn.github.io/2020-04-10-kubernetes-networking-flannel-calico/</link><pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate><guid>https://colynn.github.io/2020-04-10-kubernetes-networking-flannel-calico/</guid><description>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>网络是kubernetes核心组件， 但是理解它具体是怎样工作却有一定挑战性，主要有4个不同的网络问题要解决：&lt;/p>
&lt;ol>
&lt;li>高度耦合的容器到容器通信：这可以通过&lt;a href="https://kubernetes.io/docs/concepts/workloads/pods/pod/">pods&lt;/a>和localhost通信解决。&lt;/li>
&lt;li>Pod与Pod之间的通信；&lt;/li>
&lt;li>Pod与Service间的通信, &lt;a href="https://kubernetes.io/docs/concepts/services-networking/service/">services&lt;/a>；&lt;/li>
&lt;li>外部和 Service间的通信，&lt;a href="https://kubernetes.io/docs/concepts/services-networking/service/">services&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>无论是哪种网络插件，kubernets都要求其满足如下的基础要求。&lt;/p></description></item><item><title>VXLAN是什么及如何在容器间通信</title><link>https://colynn.github.io/2020-04-02-vxlan-is-what/</link><pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate><guid>https://colynn.github.io/2020-04-02-vxlan-is-what/</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>服务器虚拟化对于物理网络基础设施提出了更高的要求，一个物理服务器多个VMs并且每一个vm归有一个自己的Meida Access Control(MAC)地址. 在交换式以太网中为了应对在成百上千的VMs中可能存在的通信连接， 需要较大的MAC地址表。&lt;/p></description></item></channel></rss>