<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>stack on Colynn.Liu</title><link>https://colynn.github.io/tags/stack/</link><description>Recent content in stack on Colynn.Liu</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 29 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://colynn.github.io/tags/stack/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang 内存分配 - stack and heap</title><link>https://colynn.github.io/2020-07-16-go-memory-allocation/</link><pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate><guid>https://colynn.github.io/2020-07-16-go-memory-allocation/</guid><description>https://golang.org/doc/faq#stack_or_heap stack and pointers 我不能解释地像 William Kennedy一样优秀，那就让我来做一个汇总. 一个变量可以被分配在 heap或是stack: The stack contains the ongoing variables for a given goroutine. Once a function</description></item></channel></rss>