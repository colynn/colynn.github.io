<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kubernetes on Colynn.Liu</title><link>https://colynn.github.io/tags/kubernetes/</link><description>Recent content in kubernetes on Colynn.Liu</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 04 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://colynn.github.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>K8s常用命令备注手册</title><link>https://colynn.github.io/2020-11-04-kubernetes-cheat-sheet/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://colynn.github.io/2020-11-04-kubernetes-cheat-sheet/</guid><description>Pod pod 进入指定的 container # Name of the container: kaniko # Name of the pod: jnlp-gjrpc $ kubectl exec -ti jnlp-gjrpc -c kaniko /bin/sh 强制删除 pod $ kubectl delete pods mypod-ba97bc8ef-8rgaa --grace-period=0 --force Label create a label for a node: $ kubectl label node &amp;lt;nodename&amp;gt; &amp;lt;labelname&amp;gt;=&amp;lt;value&amp;gt; delete above labels from its node $ kubectl label node &amp;lt;nodename&amp;gt; &amp;lt;labelname&amp;gt;- confirm node labels $ kubectl</description></item><item><title>kubernetes-网络组件-flannel-calico</title><link>https://colynn.github.io/2020-04-10-kubernetes-networking-flannel-calico/</link><pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate><guid>https://colynn.github.io/2020-04-10-kubernetes-networking-flannel-calico/</guid><description>前言 网络是kubernetes核心组件， 但是理解它具体是怎样工作却有一定挑战性，主要有4个不同的网络问题要解决： 高度耦合的容器到容器通信：这</description></item><item><title>云原生距离我们有多远</title><link>https://colynn.github.io/2020-03-10-cloud-native-howfarawayfromus/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate><guid>https://colynn.github.io/2020-03-10-cloud-native-howfarawayfromus/</guid><description>目录 何为云原生 云原生-容器编排kubernetes 云原生-DevOps方案 结论 引言 现在越来越多的企业上云，用云，但云原生离我们真的又有多远呢</description></item><item><title>Kubernetes CI/CD 基于开源组件的实践</title><link>https://colynn.github.io/2019-10-22-kubernetes-ci-cd/</link><pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate><guid>https://colynn.github.io/2019-10-22-kubernetes-ci-cd/</guid><description>前言 应对敏捷开发的需求，对CI(持续集成))/CD（持续交付）的提出了更高的标准，今天来讨论下，如何基于开源组件（gitlab/jenkin</description></item><item><title>Kubespary 部署 Kubernetes 1.5.3 版本</title><link>https://colynn.github.io/2019-09-15-kubespray-deploy-k8s/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://colynn.github.io/2019-09-15-kubespray-deploy-k8s/</guid><description>前置条件 熟悉linux基本命令 了解k8s基本概念 K8s master推荐配置 节点数量 推荐配置（vCPU/Memory/磁盘） 1-5 nodes 1C/4G/4G 6-10 nodes 2C/8G/32G 11-100 nodes 4C/16G/80G 101-250 nodes</description></item><item><title>安装 MiniKube</title><link>https://colynn.github.io/2019-02-13-install_minikube/</link><pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate><guid>https://colynn.github.io/2019-02-13-install_minikube/</guid><description>前置条件 mac os 10.13.6 Virtual Box 确认环境需求 Minikube 要求在 BIOS 中启用 VT-x / AMD-v 虚拟化， 要检查这是否在OSX / macOS上运行，请执行以下操作： sysctl -a | grep machdep.cpu.features | grep VMX 如果有输</description></item></channel></rss>